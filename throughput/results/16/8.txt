BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'EGYPT' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'MIDDLE EAST'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'ECONOMY POLISHED BRASS'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=2211039.11..2211040.94 rows=732 width=38) (actual time=63691.619..63691.619 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=774150 read=228303 dirtied=2815 written=4144
   ->  HashAggregate  (cost=2210991.48..2211004.29 rows=732 width=38) (actual time=63691.526..63691.527 rows=2 loops=1)
         Buffers: shared hit=774147 read=228303 dirtied=2815 written=4144
         ->  Nested Loop  (cost=502295.79..2210489.32 rows=25108 width=38) (actual time=34876.571..63568.195 rows=24293 loops=1)
               Buffers: shared hit=774147 read=228303 dirtied=2815 written=4144
               ->  Nested Loop  (cost=502295.79..2203328.52 rows=25108 width=16) (actual time=34876.497..61752.671 rows=24293 loops=1)
                     Buffers: shared hit=725561 read=228303 dirtied=2815 written=4144
                     ->  Hash Join  (cost=502295.79..2196015.85 rows=25112 width=16) (actual time=34876.448..59863.394 rows=24293 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Buffers: shared hit=652555 read=228303 dirtied=2815 written=4144
                           ->  Nested Loop  (cost=0.00..1691402.94 rows=413200 width=16) (actual time=0.712..23730.037 rows=395468 loops=1)
                                 Buffers: shared hit=265025 read=200455 dirtied=2815 written=4144
                                 ->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..47218.28 rows=13627 width=4) (actual time=0.598..941.995 rows=13188 loops=1)
                                       Index Cond: (p_type = 'ECONOMY POLISHED BRASS'::text)
                                       Heap Fetches: 13188
                                       Buffers: shared hit=1322 read=10113 written=232
                                 ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.35 rows=31 width=20) (actual time=0.198..1.708 rows=30 loops=13188)
                                       Index Cond: (l_partkey = part.p_partkey)
                                       Buffers: shared hit=263703 read=190342 dirtied=2815 written=3912
                           ->  Hash  (cost=490775.11..490775.11 rows=921655 width=8) (actual time=34874.615..34874.615 rows=911403 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 35602kB
                                 Buffers: shared hit=387527 read=27848
                                 ->  Hash Join  (cost=139099.42..490775.11 rows=921655 width=8) (actual time=9747.080..34268.967 rows=911403 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       Buffers: shared hit=387527 read=27848
                                       ->  Bitmap Heap Scan on orders  (cost=100068.80..425246.91 rows=4608274 width=12) (actual time=4684.827..15405.472 rows=4561778 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Buffers: shared hit=255581 read=13638
                                             ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..98916.73 rows=4608274 width=0) (actual time=4544.818..4544.818 rows=4607485 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Buffers: shared read=13165
                                       ->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=5061.948..5061.948 rows=299838 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 10542kB
                                             Buffers: shared hit=131946 read=14210
                                             ->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=58.017..4862.484 rows=299838 loops=1)
                                                   Buffers: shared hit=131946 read=14210
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.474..0.526 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         Buffers: shared hit=2
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.423..0.433 rows=25 loops=1)
                                                               Buffers: shared hit=1
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               Buffers: shared hit=1
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.022..0.023 rows=1 loops=1)
                                                                     Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                                     Rows Removed by Filter: 4
                                                                     Buffers: shared hit=1
                                                   ->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=49.690..950.838 rows=59968 loops=5)
                                                         Recheck Cond: (c_nationkey = n1.n_nationkey)
                                                         Buffers: shared hit=131944 read=14210
                                                         ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=37.663..37.663 rows=59968 loops=5)
                                                               Index Cond: (c_nationkey = n1.n_nationkey)
                                                               Buffers: shared hit=5 read=832
                     ->  Index Scan using pk_supplier on supplier  (cost=0.00..0.28 rows=1 width=8) (actual time=0.074..0.074 rows=1 loops=24293)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=73006
               ->  Index Scan using pk_nation on nation n2  (cost=0.00..0.27 rows=1 width=30) (actual time=0.069..0.070 rows=1 loops=24293)
                     Index Cond: (n_nationkey = supplier.s_nationkey)
                     Buffers: shared hit=48586
 Total runtime: 63699.743 ms
(64 rows)

COMMIT;
COMMIT
