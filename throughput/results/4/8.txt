BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'ALGERIA' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'AFRICA'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'LARGE PLATED TIN'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=2149630.42..2149632.25 rows=732 width=38) (actual time=66730.022..66730.023 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=748798 read=253818 dirtied=2452 written=96
   ->  HashAggregate  (cost=2149582.78..2149595.59 rows=732 width=38) (actual time=66729.952..66729.955 rows=2 loops=1)
         Buffers: shared hit=748795 read=253818 dirtied=2452 written=96
         ->  Nested Loop  (cost=501830.26..2149101.74 rows=24052 width=38) (actual time=37412.843..66599.888 rows=24120 loops=1)
               Buffers: shared hit=748795 read=253818 dirtied=2452 written=96
               ->  Nested Loop  (cost=501830.26..2142242.11 rows=24052 width=16) (actual time=37412.747..65014.260 rows=24120 loops=1)
                     Buffers: shared hit=700555 read=253818 dirtied=2452 written=96
                     ->  Hash Join  (cost=501830.26..2135236.95 rows=24056 width=16) (actual time=37412.694..63368.654 rows=24120 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Buffers: shared hit=628063 read=253818 dirtied=2452 written=96
                           ->  Nested Loop  (cost=0.00..1631187.02 rows=395824 width=16) (actual time=0.551..24420.965 rows=397044 loops=1)
                                 Buffers: shared hit=233719 read=233061 dirtied=2199 written=96
                                 ->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..45544.52 rows=13067 width=4) (actual time=0.386..655.362 rows=13240 loops=1)
                                       Index Cond: (p_type = 'LARGE PLATED TIN'::text)
                                       Heap Fetches: 13240
                                       Buffers: shared hit=5145 read=6244 written=4
                                 ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..121.04 rows=31 width=20) (actual time=0.196..1.774 rows=30 loops=13240)
                                       Index Cond: (l_partkey = part.p_partkey)
                                       Buffers: shared hit=228574 read=226817 dirtied=2199 written=92
                           ->  Hash  (cost=490320.96..490320.96 rows=920744 width=8) (actual time=37411.028..37411.028 rows=911892 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 35621kB
                                 Buffers: shared hit=394341 read=20757 dirtied=253
                                 ->  Hash Join  (cost=138992.75..490320.96 rows=920744 width=8) (actual time=10322.143..36728.080 rows=911892 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       Buffers: shared hit=394341 read=20757 dirtied=253
                                       ->  Bitmap Heap Scan on orders  (cost=99962.13..424818.94 rows=4603721 width=12) (actual time=5002.086..17634.496 rows=4561673 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Buffers: shared hit=249018 read=19931 dirtied=253
                                             ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..98811.20 rows=4603721 width=0) (actual time=4882.295..4882.295 rows=4602796 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Buffers: shared hit=2 read=13146
                                       ->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=5319.717..5319.717 rows=299493 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 10530kB
                                             Buffers: shared hit=145323 read=826
                                             ->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=60.820..5116.243 rows=299493 loops=1)
                                                   Buffers: shared hit=145323 read=826
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.239..0.301 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         Buffers: shared hit=2
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.008..0.020 rows=25 loops=1)
                                                               Buffers: shared hit=1
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.213..0.213 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               Buffers: shared hit=1
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.206..0.208 rows=1 loops=1)
                                                                     Filter: (r_name = 'AFRICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                                                                     Buffers: shared hit=1
                                                   ->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=49.684..1002.831 rows=59899 loops=5)
                                                         Recheck Cond: (c_nationkey = n1.n_nationkey)
                                                         Buffers: shared hit=145321 read=826
                                                         ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=39.512..39.512 rows=59899 loops=5)
                                                               Index Cond: (c_nationkey = n1.n_nationkey)
                                                               Buffers: shared hit=7 read=826
                     ->  Index Scan using pk_supplier on supplier  (cost=0.00..0.28 rows=1 width=8) (actual time=0.064..0.064 rows=1 loops=24120)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=72492
               ->  Index Scan using pk_nation on nation n2  (cost=0.00..0.27 rows=1 width=30) (actual time=0.060..0.060 rows=1 loops=24120)
                     Index Cond: (n_nationkey = supplier.s_nationkey)
                     Buffers: shared hit=48240
 Total runtime: 66747.342 ms
(64 rows)

COMMIT;
COMMIT
